{
  "type": "data-flow",
  "appVersion": "1.14.2",
  "properties": {
    "meta": {
      "comment": {
        "markdown": {
          "text": {
            "text": "##### INFO\n\nFlow calculates the Covid-19 confirmed and death cases for a given date for each country and additionally for each continent. Calculations are available relating the numbers to the total population of the country and continent.\n\nFollowing calculations: cases per 100 people of population, cases per 100000 people of population, increase between days and percentual increase.\n\nOne or multiple data files can be processed - e.g. for a month or year.\n\n**Note**: The data used originates from Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE): https://github.com/CSSEGISandData/COVID-19\n\n",
            "syntax": "markdown",
            "size": {
              "width": "100%",
              "height": "100%"
            }
          },
          "size": {
            "width": null,
            "height": 269
          },
          "view": "preview"
        },
        "editor": {
          "collapsed": false
        }
      },
      "showingComment": true
    },
    "editor": {
      "showParameters": true,
      "showVariables": true,
      "showServices": true,
      "dialogWidth": "wide"
    },
    "imports": {
      "code": "# import the standard library\nimport core, data, strings, time, math, fun, locale, regex, bin, decimals from 'std';\n",
      "size": {
        "width": 0,
        "height": 59
      },
      "editor": {
        "collapsed": false
      }
    },
    "parameters": {
      "parameters": {
        "list": [
          {
            "name": "root_folder_data",
            "description": "folder where the data files are located",
            "type": "string",
            "defaultValue": {
              "widgetType": "expression/string",
              "widgetData": {
                "interpolation": true,
                "text": ""
              },
              "code": "''"
            }
          },
          {
            "name": "files",
            "description": "list of files to be processed",
            "type": "list",
            "defaultValue": {
              "widgetType": "expression/list",
              "widgetData": {
                "table": {
                  "list": []
                }
              },
              "code": "[]"
            }
          }
        ]
      },
      "editor": {
        "collapsed": false
      }
    },
    "variables": {
      "variables": {
        "list": [
          {
            "name": "difference",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "# calculating difference between values if they belong to the same group\n# this is used in the look ahead step\n(same_group, value, next_value) ->\nif same_group\nthen \n  value - next_value\nelse  value",
                "size": {
                  "width": 0,
                  "height": 159
                },
                "syntax": "tweakflow"
              },
              "code": "# calculating difference between values if they belong to the same group\n# this is used in the look ahead step\n(same_group, value, next_value) ->\nif same_group\nthen \n  value - next_value\nelse  value\n"
            }
          },
          {
            "name": "division",
            "type": "any",
            "value": {
              "widgetType": "expression/code",
              "widgetData": {
                "text": "# calculating division between values if they belong to the same group\n# this is used in the look ahead step\n(same_group, value, next_value) ->\nif same_group and next_value!=0\nthen \n  value / next_value\nelse  0",
                "size": {
                  "width": 0,
                  "height": 169
                },
                "syntax": "tweakflow"
              },
              "code": "# calculating division between values if they belong to the same group\n# this is used in the look ahead step\n(same_group, value, next_value) ->\nif same_group and next_value!=0\nthen \n  value / next_value\nelse  0\n"
            }
          }
        ]
      },
      "editor": {
        "collapsed": false
      }
    },
    "services": {
      "services": {
        "list": []
      },
      "editor": {
        "collapsed": false
      }
    }
  },
  "steps": [
    {
      "id": "com.twineworks.tweakstreet.library.steps.input.csvinput_565748e8-62b2-4cdc-a9d8-04309c5940e6",
      "name": "CSV Input: UID_ISO_FIPS Data",
      "type": "com.twineworks.tweakstreet.library.steps.input.csvinput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Input: UID_ISO_FIPS Data",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nThis file comes with the other Covid data files.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 95
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "./data/lookup/UID_ISO_FIPS_LookUp_Table.csv"
          },
          "code": "'./data/lookup/UID_ISO_FIPS_LookUp_Table.csv'"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "textFileContent": {
          "text": "",
          "fetchButton": {
            "value": "100"
          },
          "size": {
            "width": 0,
            "height": 180
          },
          "editor": {
            "collapsed": true
          }
        },
        "skipLines": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "0"
          },
          "code": "0"
        },
        "rowLimit": {
          "widgetType": "expression/nil",
          "widgetData": {},
          "code": "nil"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "comma"
          },
          "code": "\",\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "\""
          },
          "code": "'\"'"
        },
        "hasHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "readFields": {
          "readFields": {
            "list": [
              {
                "name": "UID",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "UID"
                  },
                  "code": "'UID'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "iso2",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "iso2"
                  },
                  "code": "'iso2'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "iso3",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "iso3"
                  },
                  "code": "'iso3'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "code3",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "code3"
                  },
                  "code": "'code3'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "FIPS",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "FIPS"
                  },
                  "code": "'FIPS'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Admin2",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Admin2"
                  },
                  "code": "'Admin2'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Province_State",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Province_State"
                  },
                  "code": "'Province_State'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Country_Region",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Country_Region"
                  },
                  "code": "'Country_Region'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Lat",
                "type": "decimal",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Lat"
                  },
                  "code": "'Lat'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "#,##0.#"
                      },
                      "code": "'#,##0.#'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('#,##0.#', 'en-US', true, '', true)\n"
                }
              },
              {
                "name": "Long_",
                "type": "decimal",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Long_"
                  },
                  "code": "'Long_'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "#,##0.#"
                      },
                      "code": "'#,##0.#'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('#,##0.#', 'en-US', true, '', true)\n"
                }
              },
              {
                "name": "Combined_Key",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Combined_Key"
                  },
                  "code": "'Combined_Key'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Population",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Population"
                  },
                  "code": "'Population'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 666,
        "y": 90
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.input.csvinput_c77689bb-16e5-4084-ad15-25d69d177b45",
      "name": "CSV Input: Covid Data",
      "type": "com.twineworks.tweakstreet.library.steps.input.csvinput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Input: Covid Data",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 36
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "in.filepath",
            "size": {
              "width": 0,
              "height": 36
            },
            "syntax": "tweakflow"
          },
          "code": "in.filepath"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "textFileContent": {
          "text": "",
          "fetchButton": {
            "value": "100"
          },
          "size": {
            "width": 0,
            "height": 180
          },
          "editor": {
            "collapsed": true
          }
        },
        "skipLines": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "0"
          },
          "code": "0"
        },
        "rowLimit": {
          "widgetType": "expression/nil",
          "widgetData": {},
          "code": "nil"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "comma"
          },
          "code": "\",\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "\""
          },
          "code": "'\"'"
        },
        "hasHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "readFields": {
          "readFields": {
            "list": [
              {
                "name": "Country_Region",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Country_Region"
                  },
                  "code": "'Country_Region'"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Confirmed",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Confirmed"
                  },
                  "code": "'Confirmed'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              },
              {
                "name": "Deaths",
                "type": "long",
                "mapping": {
                  "widgetType": "expression/string",
                  "widgetData": {
                    "interpolation": true,
                    "text": "Deaths"
                  },
                  "code": "'Deaths'"
                },
                "conversion": {
                  "widgetType": "expression/parse-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "parseDecimal": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": false
                      },
                      "code": "false"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, boolean trim, string nilValue, boolean parseDecimal) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$number_parser'};\n}\nmake_parser('0', 'en-US', true, '', false)\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 170,
        "y": 410
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_cc0d3781-e6b5-4249-a12c-93b1eaada976",
      "name": "Stream Lookup: Population",
      "type": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Stream Lookup: Population",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nLookup country name and population for the calculations.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 97
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "keyFields": {
          "fieldPairs": {
            "list": [
              {
                "left": {
                  "value": {
                    "gate": "in",
                    "name": "Country_Region"
                  }
                },
                "right": {
                  "value": {
                    "gate": "lookup",
                    "name": "Country_Region"
                  }
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "continent_name",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.lookup[:continent_name] default nil",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.lookup[:continent_name] default nil"
                }
              },
              {
                "name": "population",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.lookup[:Population] default nil",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.lookup[:Population] default nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "fetchFields": {
          "value": "lookup_"
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 666,
        "y": 266
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.pickfields_08a3b8ea-122d-4f9b-b2f2-2cdc594a6084",
      "name": "Pick Fields",
      "type": "com.twineworks.tweakstreet.library.steps.map.pickfields",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Pick Fields",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "mode": {
          "value": "whitelist"
        },
        "fieldRefs": {
          "fieldRefs": {
            "list": [
              {
                "field": {
                  "value": {
                    "gate": "in",
                    "name": "filedate"
                  }
                }
              },
              {
                "field": {
                  "value": {
                    "gate": "in",
                    "name": "Country_Region"
                  }
                }
              },
              {
                "field": {
                  "value": {
                    "gate": "in",
                    "name": "continent_name"
                  }
                }
              },
              {
                "field": {
                  "value": {
                    "gate": "in",
                    "name": "total_deaths"
                  }
                }
              },
              {
                "field": {
                  "value": {
                    "gate": "in",
                    "name": "total_confirmed"
                  }
                }
              },
              {
                "field": {
                  "value": {
                    "gate": "in",
                    "name": "population"
                  }
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {},
        "model": {}
      },
      "pos": {
        "x": 666,
        "y": 426
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.group.groupby_a5ecc6f2-5c4f-42de-bd6b-8870dc9467be",
      "name": "Group By: Date and Country",
      "type": "com.twineworks.tweakstreet.library.steps.group.groupby",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Group By: Date and Country",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "groupFields": {
          "groupFields": {
            "list": [
              {
                "name": "filedate",
                "type": "any",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "filedate"
                      }
                    }
                  },
                  "code": "::in.filedate"
                }
              },
              {
                "name": "Country_Region",
                "type": "string",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "Country_Region"
                      }
                    }
                  },
                  "code": "::in.Country_Region"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "collatedGroups": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "aggregationFields": {
          "aggregationFields": {
            "list": [
              {
                "name": "total_deaths",
                "type": "any",
                "aggregation": {
                  "widgetType": "expression/aggregate-sum",
                  "widgetData": {
                    "nilHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/nilHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "nanHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/NaNHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_aggregator: (string nilHandling, string nanHandling) -> via {:class 'com.twineworks.tweakstreet.library.aggregation.Aggregators$sum_aggregator'};\n}\nmake_aggregator('ignore', 'ignore')\n"
                },
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "Deaths"
                      }
                    }
                  },
                  "code": "::in.Deaths"
                }
              },
              {
                "name": "total_confirmed",
                "type": "any",
                "aggregation": {
                  "widgetType": "expression/aggregate-sum",
                  "widgetData": {
                    "nilHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/nilHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "nanHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/NaNHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_aggregator: (string nilHandling, string nanHandling) -> via {:class 'com.twineworks.tweakstreet.library.aggregation.Aggregators$sum_aggregator'};\n}\nmake_aggregator('ignore', 'ignore')\n"
                },
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "Confirmed"
                      }
                    }
                  },
                  "code": "::in.Confirmed"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showGroupFields": true,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 410,
        "y": 410
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.bool.filter_f8e6e56c-4320-4a4f-92fc-2843965664e4",
      "name": "Filter: States/Provinces",
      "type": "com.twineworks.tweakstreet.library.steps.bool.filter",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Filter: States/Provinces",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "condition": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "# we only want the details on the country level\nin.Province_State == ''",
            "size": {
              "width": 0,
              "height": 89
            },
            "syntax": "tweakflow"
          },
          "code": "# we only want the details on the country level\nin.Province_State == ''\n"
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "pos": {
        "x": 922,
        "y": 90
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.dummy_94d85d5b-172d-46e0-9603-492001992d30",
      "name": "Dummy: obsolete rows",
      "type": "com.twineworks.tweakstreet.library.steps.map.dummy",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Dummy: obsolete rows",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "editor": {},
        "model": {}
      },
      "pos": {
        "x": 1178,
        "y": 90
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.sort.sort_d467d299-4b52-4094-8806-767822af37f0",
      "name": "Sort: per country, type, date",
      "type": "com.twineworks.tweakstreet.library.steps.sort.sort",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Sort: per country, type, date",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nSorts the data by country and filedate for the look ahead step",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 92
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "inMemoryCapacity": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "100_000"
          },
          "code": "100_000"
        },
        "tmpFolder": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "",
            "dialogIntent": "openFolder"
          },
          "code": "''"
        },
        "sortOrders": {
          "sortOrders": {
            "list": [
              {
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "Country_Region"
                      }
                    }
                  },
                  "code": "::in.Country_Region"
                },
                "comparator": {
                  "widgetType": "expression/compare-string",
                  "widgetData": {
                    "caseSensitive": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilOrder": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/orderFirstLast",
                        "value": "first"
                      },
                      "code": "'first'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_comparator: (boolean caseSensitive, string nilOrder) -> function via {:class 'com.twineworks.tweakstreet.library.sorting.Comparators$string_comparator'};\n}\nmake_comparator(true, 'first')\n"
                },
                "direction": {
                  "widgetType": "expression/select",
                  "widgetData": {
                    "family": "expression/select/orderDirection",
                    "value": "ascending"
                  },
                  "code": "'ascending'"
                }
              },
              {
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "filedate"
                      }
                    }
                  },
                  "code": "::in.filedate"
                },
                "comparator": {
                  "widgetType": "expression/compare-datetime",
                  "widgetData": {
                    "nilOrder": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/orderFirstLast",
                        "value": "first"
                      },
                      "code": "'first'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_comparator: (string nilOrder) -> function via {:class 'com.twineworks.tweakstreet.library.sorting.Comparators$datetime_comparator'};\n}\nmake_comparator('first')\n"
                },
                "direction": {
                  "widgetType": "expression/select",
                  "widgetData": {
                    "family": "expression/select/orderDirection",
                    "value": "descending"
                  },
                  "code": "'descending'"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "pos": {
        "x": 666,
        "y": 570
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.input.csvinput_6af00d5d-876c-40ca-ba6a-a95f413d6586",
      "name": "CSV Input: Continent code lookup",
      "type": "com.twineworks.tweakstreet.library.steps.input.csvinput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Input: Continent code lookup",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "./data/lookup/country_continent_lookup.csv"
          },
          "code": "'./data/lookup/country_continent_lookup.csv'"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "textFileContent": {
          "text": "",
          "fetchButton": {
            "value": "100"
          },
          "size": {
            "width": 0,
            "height": 180
          },
          "editor": {
            "collapsed": true
          }
        },
        "skipLines": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "0"
          },
          "code": "0"
        },
        "rowLimit": {
          "widgetType": "expression/nil",
          "widgetData": {},
          "code": "nil"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "comma"
          },
          "code": "\",\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "\""
          },
          "code": "'\"'"
        },
        "hasHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "readFields": {
          "readFields": {
            "list": [
              {
                "name": "iso2",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "0"
                  },
                  "code": "0"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "continent_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "1"
                  },
                  "code": "1"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 1466,
        "y": 106
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_6c6bd1eb-e0ca-41da-aff7-3835e4654e8f",
      "name": "Stream Lookup: Continent Name",
      "type": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Stream Lookup: Continent Name",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "keyFields": {
          "fieldPairs": {
            "list": [
              {
                "left": {
                  "value": {
                    "gate": "in",
                    "name": "continent_code"
                  }
                },
                "right": {
                  "value": {
                    "gate": "lookup",
                    "name": "continent_code"
                  }
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "continent_name",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.lookup[:continent_name] default nil",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.lookup[:continent_name] default nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "fetchFields": {
          "value": "lookup_"
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 1178,
        "y": 266
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.input.csvinput_06cfa88c-76e2-4a28-8e76-fbf3fb16bf8a",
      "name": "CSV Input: Continent Name lookup",
      "type": "com.twineworks.tweakstreet.library.steps.input.csvinput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Input: Continent Name lookup",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "tabs": {},
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "./data/lookup/continent_names_lookup.csv"
          },
          "code": "'./data/lookup/continent_names_lookup.csv'"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "textFileContent": {
          "text": "",
          "fetchButton": {
            "value": "100"
          },
          "size": {
            "width": 0,
            "height": 180
          },
          "editor": {
            "collapsed": true
          }
        },
        "skipLines": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "0"
          },
          "code": "0"
        },
        "rowLimit": {
          "widgetType": "expression/nil",
          "widgetData": {},
          "code": "nil"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "comma"
          },
          "code": "\",\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "\""
          },
          "code": "'\"'"
        },
        "hasHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "readFields": {
          "readFields": {
            "list": [
              {
                "name": "continent_code",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "0"
                  },
                  "code": "0"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "continent_name",
                "type": "string",
                "mapping": {
                  "widgetType": "expression/number",
                  "widgetData": {
                    "text": "1"
                  },
                  "code": "1"
                },
                "conversion": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 1466,
        "y": 266
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.group.groupby_f6eeb5a1-64f6-4351-b465-766e66906a70",
      "name": "Group By: Date and Continent",
      "type": "com.twineworks.tweakstreet.library.steps.group.groupby",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Group By: Date and Continent",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "groupFields": {
          "groupFields": {
            "list": [
              {
                "name": "filedate",
                "type": "any",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "filedate"
                      }
                    }
                  },
                  "code": "::in.filedate"
                }
              },
              {
                "name": "continent_name",
                "type": "string",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "continent_name"
                      }
                    }
                  },
                  "code": "::in.continent_name"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "collatedGroups": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": false
          },
          "code": "false"
        },
        "aggregationFields": {
          "aggregationFields": {
            "list": [
              {
                "name": "total_deaths",
                "type": "any",
                "aggregation": {
                  "widgetType": "expression/aggregate-sum",
                  "widgetData": {
                    "nilHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/nilHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "nanHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/NaNHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_aggregator: (string nilHandling, string nanHandling) -> via {:class 'com.twineworks.tweakstreet.library.aggregation.Aggregators$sum_aggregator'};\n}\nmake_aggregator('ignore', 'ignore')\n"
                },
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "total_deaths"
                      }
                    }
                  },
                  "code": "::in.total_deaths"
                }
              },
              {
                "name": "total_confirmed",
                "type": "any",
                "aggregation": {
                  "widgetType": "expression/aggregate-sum",
                  "widgetData": {
                    "nilHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/nilHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "nanHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/NaNHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_aggregator: (string nilHandling, string nanHandling) -> via {:class 'com.twineworks.tweakstreet.library.aggregation.Aggregators$sum_aggregator'};\n}\nmake_aggregator('ignore', 'ignore')\n"
                },
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "total_confirmed"
                      }
                    }
                  },
                  "code": "::in.total_confirmed"
                }
              },
              {
                "name": "total_population",
                "type": "any",
                "aggregation": {
                  "widgetType": "expression/aggregate-sum",
                  "widgetData": {
                    "nilHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/nilHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "nanHandling": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/NaNHandling",
                        "value": "ignore"
                      },
                      "code": "'ignore'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_aggregator: (string nilHandling, string nanHandling) -> via {:class 'com.twineworks.tweakstreet.library.aggregation.Aggregators$sum_aggregator'};\n}\nmake_aggregator('ignore', 'ignore')\n"
                },
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "population"
                      }
                    }
                  },
                  "code": "::in.population"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showGroupFields": true,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 410,
        "y": 730
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.sort.sort_5896cbe9-1d5d-465c-8386-cbea66a5a138",
      "name": "Sort: per continent, type, date",
      "type": "com.twineworks.tweakstreet.library.steps.sort.sort",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Sort: per continent, type, date",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nSorts the data by country and filedate for the look ahead step",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 97
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "inMemoryCapacity": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "100_000"
          },
          "code": "100_000"
        },
        "tmpFolder": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "",
            "dialogIntent": "openFolder"
          },
          "code": "''"
        },
        "sortOrders": {
          "sortOrders": {
            "list": [
              {
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "continent_name"
                      }
                    }
                  },
                  "code": "::in.continent_name"
                },
                "comparator": {
                  "widgetType": "expression/compare-string",
                  "widgetData": {
                    "caseSensitive": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilOrder": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/orderFirstLast",
                        "value": "first"
                      },
                      "code": "'first'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_comparator: (boolean caseSensitive, string nilOrder) -> function via {:class 'com.twineworks.tweakstreet.library.sorting.Comparators$string_comparator'};\n}\nmake_comparator(true, 'first')\n"
                },
                "direction": {
                  "widgetType": "expression/select",
                  "widgetData": {
                    "family": "expression/select/orderDirection",
                    "value": "ascending"
                  },
                  "code": "'ascending'"
                }
              },
              {
                "subject": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "filedate"
                      }
                    }
                  },
                  "code": "::in.filedate"
                },
                "comparator": {
                  "widgetType": "expression/compare-datetime",
                  "widgetData": {
                    "nilOrder": {
                      "widgetType": "expression/select",
                      "widgetData": {
                        "family": "expression/select/orderFirstLast",
                        "value": "first"
                      },
                      "code": "'first'"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_comparator: (string nilOrder) -> function via {:class 'com.twineworks.tweakstreet.library.sorting.Comparators$datetime_comparator'};\n}\nmake_comparator('first')\n"
                },
                "direction": {
                  "widgetType": "expression/select",
                  "widgetData": {
                    "family": "expression/select/orderDirection",
                    "value": "descending"
                  },
                  "code": "'descending'"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "pos": {
        "x": 666,
        "y": 730
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.bool.filter_faec2c02-0bd6-4186-96f7-5468bda76923",
      "name": "Filter: invalid Continents",
      "type": "com.twineworks.tweakstreet.library.steps.bool.filter",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Filter: invalid Continents",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "condition": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "in.continent_name != nil",
            "size": {
              "width": 0,
              "height": 36
            },
            "syntax": "tweakflow"
          },
          "code": "in.continent_name != nil"
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "pos": {
        "x": 410,
        "y": 586
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.dummy_04ea5b8d-f697-404e-bd4e-60cf9b6c54c6",
      "name": "Dummy: invalid Continents",
      "type": "com.twineworks.tweakstreet.library.steps.map.dummy",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Dummy: invalid Continents",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "editor": {},
        "model": {}
      },
      "pos": {
        "x": 154,
        "y": 586
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_e8f0c863-8928-4903-9066-a7cb1a4187ec",
      "name": "Stream Lookup: Continent",
      "type": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Stream Lookup: Continent",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nLookup the continent info based on the ISO2 code in both streams.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 96
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "keyFields": {
          "fieldPairs": {
            "list": [
              {
                "left": {
                  "value": {
                    "gate": "in",
                    "name": "iso2"
                  }
                },
                "right": {
                  "value": {
                    "gate": "lookup",
                    "name": "iso2"
                  }
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "continent_code",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.lookup[:continent_code] default nil",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.lookup[:continent_code] default nil"
                }
              },
              {
                "name": "continent_name",
                "type": "string",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.lookup[:continent_name] default nil",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.lookup[:continent_name] default nil"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "fetchFields": {
          "value": "lookup_"
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 922,
        "y": 266
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.flatmap.getitems_8bcc6cb2-ae1d-444f-a8a7-80d86529f776",
      "name": "List to Rows: input files",
      "type": "com.twineworks.tweakstreet.library.steps.flatmap.getitems",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "List to Rows: input files",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nProcesses a list of files and extracts the file date.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 93
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": [
              {
                "name": "parser",
                "type": "any",
                "value": {
                  "widgetType": "expression/parse-datetime",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "MM-dd-uuuu"
                      },
                      "code": "'MM-dd-uuuu'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "defaultTz": {
                      "widgetType": "expression/timezone",
                      "widgetData": {
                        "value": "Europe/Zurich"
                      },
                      "code": "'Europe/Zurich'"
                    },
                    "trim": {
                      "widgetType": "expression/checkbox-boolean",
                      "widgetData": {
                        "value": true
                      },
                      "code": "true"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_parser: (string pattern, string locale, string default_tz, boolean trim, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Parsers$datetime_parser'};\n}\nmake_parser('MM-dd-uuuu', 'en-US', 'Europe/Zurich', true, '')\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "items": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "# the step expects a list of files to be considered for the calculations\nflow.params.files",
            "size": {
              "width": 0,
              "height": 58
            },
            "syntax": "tweakflow"
          },
          "code": "# the step expects a list of files to be considered for the calculations\nflow.params.files\n"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "filepath",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.item[:path]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.item[:path]"
                }
              },
              {
                "name": "filename",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.item[:name]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.item[:name]"
                }
              },
              {
                "name": "fields_ok",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.item[:fields_ok]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.item[:fields_ok]"
                }
              },
              {
                "name": "fields_present",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.item[:fields_present]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.item[:fields_present]"
                }
              },
              {
                "name": "fields_required",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "results.item[:fields_required]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "results.item[:fields_required]"
                }
              },
              {
                "name": "filedate",
                "type": "datetime",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "# parsing the file date from the filename\nvars.parser(strings.substring(filename,0,10))",
                    "size": {
                      "width": 0,
                      "height": 65
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "# parsing the file date from the filename\nvars.parser(strings.substring(filename,0,10))\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": true,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 170,
        "y": 90
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput_265e6625-947e-44f4-89f6-b7e181516996",
      "name": "CSV Output: confirmed/deaths Country",
      "type": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Output: confirmed/deaths Country",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "./data/output/cases_per_country.csv",
            "dialogIntent": "saveFile"
          },
          "code": "'./data/output/cases_per_country.csv'"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "comma"
          },
          "code": "\",\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "\""
          },
          "code": "'\"'"
        },
        "lineEndings": {
          "widgetType": "expression/line-ending",
          "widgetData": {
            "value": "unix"
          },
          "code": "\"\\n\""
        },
        "writeHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "whenFileExists": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput/whenFileExists",
            "value": "truncate"
          },
          "code": "'truncate'"
        },
        "fieldMode": {
          "value": "fixed"
        },
        "stringWriteFields": {
          "stringWriteFields": {
            "list": [
              {
                "name": "filedate",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "filedate"
                      }
                    }
                  },
                  "code": "::in.filedate"
                },
                "formatter": {
                  "widgetType": "expression/format-datetime",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/datetime-pattern",
                      "widgetData": {
                        "value": "uuuu-MM-dd"
                      },
                      "code": "'uuuu-MM-dd'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$datetime_formatter'};\n}\nmake_formatter('uuuu-MM-dd', 'en-US', '')\n"
                }
              },
              {
                "name": "continent_name",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "continent_name"
                      }
                    }
                  },
                  "code": "::in.continent_name"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "Country_Region",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "Country_Region"
                      }
                    }
                  },
                  "code": "::in.Country_Region"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "population",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "population"
                      }
                    }
                  },
                  "code": "::in.population"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "total_confirmed",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "total_confirmed"
                      }
                    }
                  },
                  "code": "::in.total_confirmed"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "confirmed_per_100000",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "confirmed_per_100000"
                      }
                    }
                  },
                  "code": "::in.confirmed_per_100000"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "confirmed_per_100",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "confirmed_per_100"
                      }
                    }
                  },
                  "code": "::in.confirmed_per_100"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "increase_total_confirmed",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "increase_total_confirmed"
                      }
                    }
                  },
                  "code": "::in.increase_total_confirmed"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "increase_total_confirmed_percent",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "increase_total_confirmed_percent"
                      }
                    }
                  },
                  "code": "::in.increase_total_confirmed_percent"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "total_deaths",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "total_deaths"
                      }
                    }
                  },
                  "code": "::in.total_deaths"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "deaths_per_100000",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "deaths_per_100000"
                      }
                    }
                  },
                  "code": "::in.deaths_per_100000"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "deaths_per_100",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "deaths_per_100"
                      }
                    }
                  },
                  "code": "::in.deaths_per_100"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "increase_total_deaths",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "increase_total_deaths"
                      }
                    }
                  },
                  "code": "::in.increase_total_deaths"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "increase_total_deaths_percent",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "increase_total_deaths_percent"
                      }
                    }
                  },
                  "code": "::in.increase_total_deaths_percent"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "dataDrivenColumns": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "name",
                "name": "name"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "dataDrivenValues": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showStringWriteFields": true,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 1466,
        "y": 570
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput_b40fba10-56bf-4051-b316-4a490dda3e36",
      "name": "CSV Output: confirmed/deaths Continent",
      "type": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "CSV Output: confirmed/deaths Continent",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "fs": {
          "widgetType": "expression/storage-ref",
          "widgetData": {
            "name": ""
          },
          "code": "nil"
        },
        "file": {
          "widgetType": "expression/local-file",
          "widgetData": {
            "interpolation": true,
            "text": "./data/output/cases_per_continent.csv",
            "dialogIntent": "saveFile"
          },
          "code": "'./data/output/cases_per_continent.csv'"
        },
        "charset": {
          "widgetType": "expression/charset",
          "widgetData": {
            "value": "UTF-8"
          },
          "code": "'UTF-8'"
        },
        "compression": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "expression/select/compression",
            "value": "none"
          },
          "code": "'none'"
        },
        "fieldSeparator": {
          "widgetType": "expression/separator",
          "widgetData": {
            "value": "comma"
          },
          "code": "\",\""
        },
        "fieldEncloser": {
          "widgetType": "expression/string",
          "widgetData": {
            "interpolation": true,
            "text": "\""
          },
          "code": "'\"'"
        },
        "lineEndings": {
          "widgetType": "expression/line-ending",
          "widgetData": {
            "value": "unix"
          },
          "code": "\"\\n\""
        },
        "writeHeaderLine": {
          "widgetType": "expression/checkbox-boolean",
          "widgetData": {
            "value": true
          },
          "code": "true"
        },
        "whenFileExists": {
          "widgetType": "expression/select",
          "widgetData": {
            "family": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput/whenFileExists",
            "value": "truncate"
          },
          "code": "'truncate'"
        },
        "fieldMode": {
          "value": "fixed"
        },
        "stringWriteFields": {
          "stringWriteFields": {
            "list": [
              {
                "name": "filedate",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "filedate"
                      }
                    }
                  },
                  "code": "::in.filedate"
                },
                "formatter": {
                  "widgetType": "expression/format-datetime",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/datetime-pattern",
                      "widgetData": {
                        "value": "uuuu-MM-dd"
                      },
                      "code": "'uuuu-MM-dd'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$datetime_formatter'};\n}\nmake_formatter('uuuu-MM-dd', 'en-US', '')\n"
                }
              },
              {
                "name": "continent_name",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "continent_name"
                      }
                    }
                  },
                  "code": "::in.continent_name"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "total_population",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "total_population"
                      }
                    }
                  },
                  "code": "::in.total_population"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "total_confirmed",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "total_confirmed"
                      }
                    }
                  },
                  "code": "::in.total_confirmed"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "confirmed_per_100000",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "confirmed_per_100000"
                      }
                    }
                  },
                  "code": "::in.confirmed_per_100000"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "confirmed_per_100",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "confirmed_per_100"
                      }
                    }
                  },
                  "code": "::in.confirmed_per_100"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "increase_total_confirmed",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "increase_total_confirmed"
                      }
                    }
                  },
                  "code": "::in.increase_total_confirmed"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "increase_total_confirmed_percent",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "increase_total_confirmed_percent"
                      }
                    }
                  },
                  "code": "::in.increase_total_confirmed_percent"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "total_deaths",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "total_deaths"
                      }
                    }
                  },
                  "code": "::in.total_deaths"
                },
                "formatter": {
                  "widgetType": "expression/nil",
                  "widgetData": {},
                  "code": "nil"
                }
              },
              {
                "name": "deaths_per_100000",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "deaths_per_100000"
                      }
                    }
                  },
                  "code": "::in.deaths_per_100000"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "deaths_per_100",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "deaths_per_100"
                      }
                    }
                  },
                  "code": "::in.deaths_per_100"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              },
              {
                "name": "increase_total_deaths",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "increase_total_deaths"
                      }
                    }
                  },
                  "code": "::in.increase_total_deaths"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/number-pattern",
                      "widgetData": {
                        "value": "0"
                      },
                      "code": "'0'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0', 'en-US', '')\n"
                }
              },
              {
                "name": "increase_total_deaths_percent",
                "value": {
                  "widgetType": "expression/field-value-ref",
                  "widgetData": {
                    "fieldSelect": {
                      "value": {
                        "gate": "in",
                        "name": "increase_total_deaths_percent"
                      }
                    }
                  },
                  "code": "::in.increase_total_deaths_percent"
                },
                "formatter": {
                  "widgetType": "expression/format-number",
                  "widgetData": {
                    "pattern": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "0.00"
                      },
                      "code": "'0.00'"
                    },
                    "locale": {
                      "widgetType": "expression/locale",
                      "widgetData": {
                        "value": "en-US"
                      },
                      "code": "'en-US'"
                    },
                    "nilValue": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": ""
                      },
                      "code": "''"
                    },
                    "editor": {
                      "collapsed": true
                    },
                    "model": {}
                  },
                  "code": "let {\n  make_formatter: (string pattern, string locale, string nilValue) -> function via {:class 'com.twineworks.tweakstreet.library.conversion.Formatters$number_formatter'};\n}\nmake_formatter('0.00', 'en-US', '')\n"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "dataDrivenColumns": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "name",
                "name": "name"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "dataDrivenValues": {
          "widgetType": "expression/list",
          "widgetData": {
            "table": {
              "list": []
            }
          },
          "code": "[]"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showStringWriteFields": true,
          "showResultVariables": false,
          "showOutputFields": false
        },
        "model": {}
      },
      "pos": {
        "x": 1466,
        "y": 730
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.buffer.lookaheadbehind_06665af1-9116-486e-8db2-2046ee13b263",
      "name": "Look ahead: Country",
      "type": "com.twineworks.tweakstreet.library.steps.buffer.lookaheadbehind",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Look ahead: Country",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nGet the data of the next row, which is the previous file/day.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 100
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "trackIncoming": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "1"
          },
          "code": "1"
        },
        "trackDeparted": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "1"
          },
          "code": "1"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "next",
                "type": "dict",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.next"
                  },
                  "code": "::results.next"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 922,
        "y": 570
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.buffer.lookaheadbehind_183dbe21-de02-4865-96d0-62e3a376ce63",
      "name": "Look ahead: Continent",
      "type": "com.twineworks.tweakstreet.library.steps.buffer.lookaheadbehind",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Look ahead: Continent",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nGet the data of the next row, which is the previous file/day.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 103
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "trackIncoming": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "1"
          },
          "code": "1"
        },
        "trackDeparted": {
          "widgetType": "expression/number",
          "widgetData": {
            "text": "1"
          },
          "code": "1"
        },
        "resultVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "next",
                "type": "dict",
                "value": {
                  "widgetType": "expression/result-ref",
                  "widgetData": {
                    "value": "::results.next"
                  },
                  "code": "::results.next"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": false,
          "showResultVariables": false,
          "showOutputFields": true
        },
        "model": {}
      },
      "pos": {
        "x": 922,
        "y": 730
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.calculator_98d066a4-68c2-4d54-8a16-360ca06d6e47",
      "name": "Calculator: increase Country",
      "type": "com.twineworks.tweakstreet.library.steps.map.calculator",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Calculator: increase Country",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nThe increase of confirmed and death cases to the previous file/date is calculated. Calculations use two functions defined\nat the dataflow level. Also values based on population are calculated.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 118
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": [
              {
                "name": "same_group",
                "type": "boolean",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.Country_Region == in.next[:Country_Region]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.Country_Region == in.next[:Country_Region]"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "increase_total_confirmed",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "flow.vars.difference(vars.same_group, in.total_confirmed, in.next[:total_confirmed])",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "flow.vars.difference(vars.same_group, in.total_confirmed, in.next[:total_confirmed])"
                }
              },
              {
                "name": "increase_total_confirmed_percent",
                "type": "double",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "flow.vars.division(vars.same_group, increase_total_confirmed, in.next[:total_confirmed]) * 100\n",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "flow.vars.division(vars.same_group, increase_total_confirmed, in.next[:total_confirmed]) * 100"
                }
              },
              {
                "name": "increase_total_deaths",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "flow.vars.difference(vars.same_group, in.total_deaths, in.next[:total_deaths])",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "flow.vars.difference(vars.same_group, in.total_deaths, in.next[:total_deaths])"
                }
              },
              {
                "name": "increase_total_deaths_percent",
                "type": "double",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "flow.vars.division(vars.same_group, increase_total_deaths, in.next[:total_deaths]) * 100\n",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "flow.vars.division(vars.same_group, increase_total_deaths, in.next[:total_deaths]) * 100"
                }
              },
              {
                "name": "deaths_per_100000",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.total_deaths/in.population * 100000",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.total_deaths/in.population * 100000"
                }
              },
              {
                "name": "deaths_per_100",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.total_deaths/in.population * 100",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.total_deaths/in.population * 100"
                }
              },
              {
                "name": "confirmed_per_100000",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.total_confirmed/in.population * 100000",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.total_confirmed/in.population * 100000"
                }
              },
              {
                "name": "confirmed_per_100",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.total_confirmed/in.population * 100",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.total_confirmed/in.population * 100"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": true,
          "showOutputFields": true,
          "dialogWidth": "stretch"
        },
        "model": {}
      },
      "pos": {
        "x": 1178,
        "y": 570
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.calculator_eeb027ac-dea6-4a13-ac53-bcfd022f0dc5",
      "name": "Calculator: increase Continent",
      "type": "com.twineworks.tweakstreet.library.steps.map.calculator",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Calculator: increase Continent",
          "showingComment": true,
          "comment": {
            "markdown": {
              "text": {
                "text": "##### INFO\n\nThe increase of confirmed and death cases to the previous file/date is calculated. Calculations use two functions defined\nat the dataflow level. Also values based on population are calculated.",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 121
              },
              "view": "preview"
            },
            "editor": {
              "collapsed": false
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": [
              {
                "name": "same_group",
                "type": "boolean",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.continent_name == in.next[:continent_name ]",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.continent_name == in.next[:continent_name ]"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "outputFields": {
          "outputFields": {
            "list": [
              {
                "name": "increase_total_confirmed",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "flow.vars.difference(vars.same_group, in.total_confirmed, in.next[:total_confirmed])",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "flow.vars.difference(vars.same_group, in.total_confirmed, in.next[:total_confirmed])"
                }
              },
              {
                "name": "increase_total_confirmed_percent",
                "type": "double",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "flow.vars.division(vars.same_group, increase_total_confirmed, in.next[:total_confirmed]) * 100\n",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "flow.vars.division(vars.same_group, increase_total_confirmed, in.next[:total_confirmed]) * 100"
                }
              },
              {
                "name": "increase_total_deaths",
                "type": "long",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "flow.vars.difference(vars.same_group, in.total_deaths, in.next[:total_deaths])",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "flow.vars.difference(vars.same_group, in.total_deaths, in.next[:total_deaths])"
                }
              },
              {
                "name": "increase_total_deaths_percent",
                "type": "double",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "flow.vars.division(vars.same_group, increase_total_deaths, in.next[:total_deaths]) * 100\n",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "flow.vars.division(vars.same_group, increase_total_deaths, in.next[:total_deaths]) * 100"
                }
              },
              {
                "name": "deaths_per_100000",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.total_deaths/in.total_population * 100000",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.total_deaths/in.total_population * 100000"
                }
              },
              {
                "name": "deaths_per_100",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.total_deaths/in.total_population * 100",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.total_deaths/in.total_population * 100"
                }
              },
              {
                "name": "confirmed_per_100000",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.total_confirmed/in.total_population * 100000",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.total_confirmed/in.total_population * 100000"
                }
              },
              {
                "name": "confirmed_per_100",
                "type": "any",
                "value": {
                  "widgetType": "expression/code",
                  "widgetData": {
                    "text": "in.total_confirmed/in.total_population * 100",
                    "size": {
                      "width": 0,
                      "height": 36
                    },
                    "syntax": "tweakflow"
                  },
                  "code": "in.total_confirmed/in.total_population * 100"
                }
              }
            ]
          },
          "editor": {
            "collapsed": false
          }
        },
        "editor": {
          "showEntryVariables": true,
          "showOutputFields": true,
          "dialogWidth": "wide"
        },
        "model": {}
      },
      "pos": {
        "x": 1178,
        "y": 730
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.bool.filter_3546a4cb-2e16-4ed4-88cc-40b65f6f9e7d",
      "name": "Filter",
      "type": "com.twineworks.tweakstreet.library.steps.bool.filter",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Filter",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "condition": {
          "widgetType": "expression/code",
          "widgetData": {
            "text": "in.fields_ok",
            "size": {
              "width": 0,
              "height": 36
            },
            "syntax": "tweakflow"
          },
          "code": "in.fields_ok"
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "pos": {
        "x": 170,
        "y": 250
      }
    },
    {
      "id": "com.twineworks.tweakstreet.library.steps.map.logger_c62a72f5-5c78-4920-8660-76f1b684c0e3",
      "name": "Logger: invalid files",
      "type": "com.twineworks.tweakstreet.library.steps.map.logger",
      "instanceCount": {
        "widgetType": "expression/number",
        "widgetData": {
          "text": "1"
        },
        "code": "1"
      },
      "data": {
        "meta": {
          "name": "Logger: invalid files",
          "showingComment": false,
          "comment": {
            "markdown": {
              "text": {
                "text": "",
                "syntax": "markdown",
                "size": {
                  "width": "100%",
                  "height": "100%"
                }
              },
              "size": {
                "width": null,
                "height": 160
              },
              "view": "edit"
            },
            "editor": {
              "collapsed": true
            }
          }
        },
        "entryVariables": {
          "variables": {
            "list": []
          },
          "editor": {
            "collapsed": false
          }
        },
        "message": {
          "widgetType": "expression/text",
          "widgetData": {
            "text": "file with invalid or missing fields:",
            "size": {
              "width": 0,
              "height": 68
            },
            "syntax": "text",
            "lineSeparator": "\n",
            "interpolation": true
          },
          "code": "'file with invalid or missing fields:'"
        },
        "logValues": {
          "widgetType": "expression/data-grid",
          "widgetData": {
            "fields": [
              {
                "id": "name",
                "name": "name"
              },
              {
                "id": "value",
                "name": "value"
              }
            ],
            "gen": {
              "as": "rows",
              "of": "dict",
              "meta": false
            },
            "table": {
              "list": [
                {
                  "fields": {
                    "name": {
                      "widgetType": "expression/string",
                      "widgetData": {
                        "interpolation": true,
                        "text": "file"
                      },
                      "code": "'file'"
                    },
                    "value": {
                      "widgetType": "expression/code",
                      "widgetData": {
                        "text": "{\n  :path row[:filepath],\n  :fields_required row[:fields_required],\n  :fields_present row[:fields_present]\n}",
                        "size": {
                          "width": 0,
                          "height": 164
                        },
                        "syntax": "tweakflow"
                      },
                      "code": "{\n  :path row[:filepath],\n  :fields_required row[:fields_required],\n  :fields_present row[:fields_present]\n}"
                    }
                  }
                }
              ]
            }
          },
          "code": "[{\n  :name 'file',\n  :value {\n  :path row[:filepath],\n  :fields_required row[:fields_required],\n  :fields_present row[:fields_present]\n}\n}]"
        },
        "editor": {
          "showEntryVariables": false
        },
        "model": {}
      },
      "pos": {
        "x": 410,
        "y": 250
      }
    }
  ],
  "hops": [
    {
      "id": "8c2b9649-2262-4163-ae41-3bf36a6f6627",
      "fromStep": "com.twineworks.tweakstreet.library.steps.group.groupby_a5ecc6f2-5c4f-42de-bd6b-8870dc9467be",
      "toStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_cc0d3781-e6b5-4249-a12c-93b1eaada976",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "cf2d7478-653b-4053-9498-1d2bdd23187f",
      "fromStep": "com.twineworks.tweakstreet.library.steps.input.csvinput_6af00d5d-876c-40ca-ba6a-a95f413d6586",
      "toStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_6c6bd1eb-e0ca-41da-aff7-3835e4654e8f",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "1ce4bf56-ec92-481a-af51-074b46b35a80",
      "fromStep": "com.twineworks.tweakstreet.library.steps.input.csvinput_06cfa88c-76e2-4a28-8e76-fbf3fb16bf8a",
      "toStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_6c6bd1eb-e0ca-41da-aff7-3835e4654e8f",
      "fromGate": "out",
      "toGate": "lookup",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "467e7e12-9838-4d36-8cf7-f9136745fabf",
      "fromStep": "com.twineworks.tweakstreet.library.steps.input.csvinput_c77689bb-16e5-4084-ad15-25d69d177b45",
      "toStep": "com.twineworks.tweakstreet.library.steps.group.groupby_a5ecc6f2-5c4f-42de-bd6b-8870dc9467be",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "eb693622-19d6-4f85-ae9f-4cce4aadabdc",
      "fromStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_6c6bd1eb-e0ca-41da-aff7-3835e4654e8f",
      "toStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_e8f0c863-8928-4903-9066-a7cb1a4187ec",
      "fromGate": "out",
      "toGate": "lookup",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "a6b8f1dc-66d6-4019-a652-fbb29822bac5",
      "fromStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_e8f0c863-8928-4903-9066-a7cb1a4187ec",
      "toStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_cc0d3781-e6b5-4249-a12c-93b1eaada976",
      "fromGate": "out",
      "toGate": "lookup",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "d988f44e-2d95-449c-8766-63c44f969622",
      "fromStep": "com.twineworks.tweakstreet.library.steps.input.csvinput_565748e8-62b2-4cdc-a9d8-04309c5940e6",
      "toStep": "com.twineworks.tweakstreet.library.steps.bool.filter_f8e6e56c-4320-4a4f-92fc-2843965664e4",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "38e5cf63-310f-46cb-9215-faec62dfd00d",
      "fromStep": "com.twineworks.tweakstreet.library.steps.bool.filter_f8e6e56c-4320-4a4f-92fc-2843965664e4",
      "toStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_e8f0c863-8928-4903-9066-a7cb1a4187ec",
      "fromGate": "yes",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "38465415-e634-4f77-93c6-6606a2cce046",
      "fromStep": "com.twineworks.tweakstreet.library.steps.bool.filter_f8e6e56c-4320-4a4f-92fc-2843965664e4",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.dummy_94d85d5b-172d-46e0-9603-492001992d30",
      "fromGate": "no",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "eca3a6f5-8935-4e4c-966b-6fd66d918653",
      "fromStep": "com.twineworks.tweakstreet.library.steps.bool.filter_faec2c02-0bd6-4186-96f7-5468bda76923",
      "toStep": "com.twineworks.tweakstreet.library.steps.group.groupby_f6eeb5a1-64f6-4351-b465-766e66906a70",
      "fromGate": "yes",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "f184647c-d6b3-49f9-ba56-cc0ccbc8d653",
      "fromStep": "com.twineworks.tweakstreet.library.steps.bool.filter_faec2c02-0bd6-4186-96f7-5468bda76923",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.dummy_04ea5b8d-f697-404e-bd4e-60cf9b6c54c6",
      "fromGate": "no",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "9626c9fd-6143-4a23-91dc-6244b6b7a6fc",
      "fromStep": "com.twineworks.tweakstreet.library.steps.sort.sort_d467d299-4b52-4094-8806-767822af37f0",
      "toStep": "com.twineworks.tweakstreet.library.steps.buffer.lookaheadbehind_06665af1-9116-486e-8db2-2046ee13b263",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "fd062772-eee6-46e7-bbe5-eb7a9e086ae3",
      "fromStep": "com.twineworks.tweakstreet.library.steps.sort.sort_5896cbe9-1d5d-465c-8386-cbea66a5a138",
      "toStep": "com.twineworks.tweakstreet.library.steps.buffer.lookaheadbehind_183dbe21-de02-4865-96d0-62e3a376ce63",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "72ec7f6a-9ee5-48c6-8a8a-f285de00637b",
      "fromStep": "com.twineworks.tweakstreet.library.steps.buffer.lookaheadbehind_06665af1-9116-486e-8db2-2046ee13b263",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.calculator_98d066a4-68c2-4d54-8a16-360ca06d6e47",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "ad71c5d2-c636-44b8-aedf-d193ce58a9e0",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.calculator_98d066a4-68c2-4d54-8a16-360ca06d6e47",
      "toStep": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput_265e6625-947e-44f4-89f6-b7e181516996",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "6163ef98-be81-43fc-8db2-50d9d3adcc9e",
      "fromStep": "com.twineworks.tweakstreet.library.steps.buffer.lookaheadbehind_183dbe21-de02-4865-96d0-62e3a376ce63",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.calculator_eeb027ac-dea6-4a13-ac53-bcfd022f0dc5",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "9a2ad62e-12cb-42b6-9ec7-8135ac80fec1",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.calculator_eeb027ac-dea6-4a13-ac53-bcfd022f0dc5",
      "toStep": "com.twineworks.tweakstreet.library.steps.stringoutput.csvoutput_b40fba10-56bf-4051-b316-4a490dda3e36",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "b2db0646-4e96-4359-830d-d5025177dd7d",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.pickfields_08a3b8ea-122d-4f9b-b2f2-2cdc594a6084",
      "toStep": "com.twineworks.tweakstreet.library.steps.sort.sort_d467d299-4b52-4094-8806-767822af37f0",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "4049f002-b6de-49fc-a681-e666b68063af",
      "fromStep": "com.twineworks.tweakstreet.library.steps.map.pickfields_08a3b8ea-122d-4f9b-b2f2-2cdc594a6084",
      "toStep": "com.twineworks.tweakstreet.library.steps.bool.filter_faec2c02-0bd6-4186-96f7-5468bda76923",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "a1fb1a1a-63ba-4b1a-a570-907e5f73946e",
      "fromStep": "com.twineworks.tweakstreet.library.steps.group.groupby_f6eeb5a1-64f6-4351-b465-766e66906a70",
      "toStep": "com.twineworks.tweakstreet.library.steps.sort.sort_5896cbe9-1d5d-465c-8386-cbea66a5a138",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "cfab62b9-6987-48bf-a552-d2326d59d76a",
      "fromStep": "com.twineworks.tweakstreet.library.steps.streamlookup.streamlookup_cc0d3781-e6b5-4249-a12c-93b1eaada976",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.pickfields_08a3b8ea-122d-4f9b-b2f2-2cdc594a6084",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "561766c5-a7eb-4c45-8d1d-a62da95998d5",
      "fromStep": "com.twineworks.tweakstreet.library.steps.flatmap.getitems_8bcc6cb2-ae1d-444f-a8a7-80d86529f776",
      "toStep": "com.twineworks.tweakstreet.library.steps.bool.filter_3546a4cb-2e16-4ed4-88cc-40b65f6f9e7d",
      "fromGate": "out",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "fd9d1e22-e8fc-4add-b62e-e54266bfe466",
      "fromStep": "com.twineworks.tweakstreet.library.steps.bool.filter_3546a4cb-2e16-4ed4-88cc-40b65f6f9e7d",
      "toStep": "com.twineworks.tweakstreet.library.steps.map.logger_c62a72f5-5c78-4920-8660-76f1b684c0e3",
      "fromGate": "no",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    },
    {
      "id": "77b6d455-4f18-4649-b375-c2adb9813861",
      "fromStep": "com.twineworks.tweakstreet.library.steps.bool.filter_3546a4cb-2e16-4ed4-88cc-40b65f6f9e7d",
      "toStep": "com.twineworks.tweakstreet.library.steps.input.csvinput_c77689bb-16e5-4084-ad15-25d69d177b45",
      "fromGate": "yes",
      "toGate": "in",
      "disabled": false,
      "partitioner": {
        "widgetType": "expression/code",
        "widgetData": {
          "text": ""
        },
        "code": "nil"
      }
    }
  ]
}